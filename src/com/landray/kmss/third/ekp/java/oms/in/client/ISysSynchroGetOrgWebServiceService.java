package com.landray.kmss.third.ekp.java.oms.in.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.4.2
 * 2021-02-01T09:44:31.354+08:00
 * Generated source version: 2.4.2
 * 
 */
@WebServiceClient(name = "ISysSynchroGetOrgWebServiceService", 
                  wsdlLocation = "http://localhost:8092/ekp/sys/webservice/sysSynchroGetOrgWebService?wsdl",
                  targetNamespace = "http://out.webservice.organization.sys.kmss.landray.com/") 
public class ISysSynchroGetOrgWebServiceService extends Service {

    public final static URL WSDL_LOCATION;

	public final static QName SERVICE = new QName(
			"http://out.webservice.organization.sys.kmss.landray.com/",
			"ISysSynchroGetOrgWebServiceService");
	public final static QName ISysSynchroGetOrgWebServicePort = new QName(
			"http://out.webservice.organization.sys.kmss.landray.com/",
			"ISysSynchroGetOrgWebServicePort");
	static {
		URL url = null;
		try {
			url = new URL(
					"http://java.demo.com:8080/sys/webservice/sysSynchroGetOrgWebService?wsdl");
		} catch (MalformedURLException e) {
			org.slf4j.LoggerFactory.getLogger(
							ISysSynchroGetOrgWebServiceService.class.getName())
					.error(
							"Can not initialize the default wsdl from {0}",
							"http://java.demo.com:8080/sys/webservice/sysSynchroGetOrgWebService?wsdl");
		}
		WSDL_LOCATION = url;
	}

    public ISysSynchroGetOrgWebServiceService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ISysSynchroGetOrgWebServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ISysSynchroGetOrgWebServiceService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ISysSynchroGetOrgWebServiceService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ISysSynchroGetOrgWebServiceService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ISysSynchroGetOrgWebServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ISysSynchroGetOrgWebService
     */
    @WebEndpoint(name = "ISysSynchroGetOrgWebServicePort")
    public ISysSynchroGetOrgWebService getISysSynchroGetOrgWebServicePort() {
        return super.getPort(ISysSynchroGetOrgWebServicePort, ISysSynchroGetOrgWebService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ISysSynchroGetOrgWebService
     */
    @WebEndpoint(name = "ISysSynchroGetOrgWebServicePort")
    public ISysSynchroGetOrgWebService getISysSynchroGetOrgWebServicePort(WebServiceFeature... features) {
        return super.getPort(ISysSynchroGetOrgWebServicePort, ISysSynchroGetOrgWebService.class, features);
    }

}
