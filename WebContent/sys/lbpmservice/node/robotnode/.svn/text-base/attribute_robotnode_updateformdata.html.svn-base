<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
</head>
<script>
var dialogObject=parent.dialogArguments?parent.dialogArguments:parent.opener.Com_Parameter.Dialog;
var Com_Parameter = {
	ContextPath:dialogObject.Window.Com_Parameter.ContextPath,
	ResPath:dialogObject.Window.Com_Parameter.ResPath,
	Style:dialogObject.Window.Com_Parameter.Style,
	JsFileList:new Array,
	StylePath:dialogObject.Window.Com_Parameter.StylePath,
	Cache:dialogObject.Window.Com_Parameter.Cache
};
// 多语言对象
LangObject = parent.FlowChartObject.Lang;
// 当前节点多语言对象
LangNodeObject = LangObject.Node;
</script>
<script type="text/javascript" src="../../../../resource/js/common.js"></script>
<script type="text/javascript">
Com_IncludeFile("document.js", "style/" + Com_Parameter.Style + "/doc/");
Com_IncludeFile("docutil.js|doclist.js|dialog.js|data.js|formula.js");
</script>
<script>
// 必须实现的方法，供父窗口(attribute_robotnode.html)调用。
function returnValue() {
	if (!check()) return null;
	return "{" + getParameterJsonByTable() + "}";
};

function check() {
	return true;
};

function getParameterJsonByTable() {
	var rtnJson = new Array();
	var table = document.getElementById("main");
	for (var i = 1, length = table.rows.length; i < length; i++) {
		rtnJson.push(getParamterJsonByRow(table.rows[i]));
	}
	return "\"params\":[" + rtnJson.join(",") + "]";
};

function getParamterJsonByRow(trElement) {
	var rtnJson = new Array();
	rtnJson.push("{");
	// 表单字段名
	var fieldSelect = getElementsByParent(trElement.cells[0], "select")[0];
	var option = fieldSelect.options[fieldSelect.selectedIndex];
	rtnJson.push("\"field\":\"" + option.value + "\"");
	rtnJson.push(",\"fieldName\":\"" + option.text + "\"");
	// 数据类型
	var selectedIndex = getIndexFromFieldList(option.value), fieldList = parent.FlowChartObject.FormFieldList;
	rtnJson.push(",\"dataType\":\"" + ((selectedIndex == null) ? "Object" : fieldList[selectedIndex].type) + "\"");
	// 更新值
	var inputArr = getElementsByParent(trElement.cells[1], "input");
	rtnJson.push(",\"idField\":\"" + parent.formatJson(inputArr[0].value) + "\"");
	rtnJson.push(",\"nameField\":\"" + parent.formatJson(inputArr[1].value) + "\"");
	// 结束
	rtnJson.push("}");
	
	return rtnJson.join('');
};

function getElementsByParent(oParent, tagName) {
	var rtnResult = new Array(), child;
	for (var i = 0, length = oParent.childNodes.length; i < length; i++) {
		child = oParent.childNodes[i];
		if (child.tagName && child.tagName.toLowerCase() == tagName)
			rtnResult.push(child);
	}
	return rtnResult;
};

function writeMessage(key) {
	document.write(LangNodeObject[key]);
};

function createInputElementHTML(value, status) {
	var _value = value || '', statusHTML = '', styleHTML = 'width:100%;';
	switch(status) {
	case 'readOnly':
		statusHTML += ' readOnly';
		break;
	case 'hidden':
		styleHTML += 'display:none;';
		break;
	}
	return '<input class=\'inputsgl\' value=\'' + Com_StrEscape(_value) + '\'' + statusHTML + ' style=\'' + styleHTML + '\'>';
};

function createHrefElementHTML(text, actionJs) {
	var _actionJs = actionJs || '';
	return '<a href=\'JavaScript:void(0);\' onclick=\'' + _actionJs + '\'>' + text + '</a>';
};

/***********************************************
功能：转义代码中的敏感字符
***********************************************/
function Com_StrEscape(s){
	if(s==null || s=="")
		return "";
	var re = /&/g;
	s = s.replace(re, "&amp;");
	re = /\\/g;
	s = s.replace(re, "\\\\");
	re = /\"/g;
	s = s.replace(re, "&quot;");
	re = /'/g;
	s = s.replace(re, '&#39;');
	re = /</g;
	s = s.replace(re, "&lt;");
	re = /\r\n|[\r\n]/g;
	s = s.replace(re, "<BR>");
	re = />/g;
	s.replace(re, "&gt;");
	re = /\r\n|[\r\n]/g;
	return s = s.replace(re, "<BR>");
}

function createSelectElementHTML(options, checkValue, checkName) {
	var rtnResult = new Array();
	if (options == null || options.length == 0) {
		var value = checkValue || '', name = checkName || '';
		if (name != '')	rtnResult.push('<option value=\'' + value + '\' selected>' + name + '</option>');
	} else {
		for (var i = 0, length = options.length; i < length; i++) {
			var option = options[i], value = option.value || option.name;
			rtnResult.push('<option value=\'' + value + '\'');
			if (value == checkValue) rtnResult.push(' selected');
			rtnResult.push('>' + option.name + '</option>');
		}
	}
	return '<select>' + rtnResult.join('') + '</select>';
};

function transFormFieldList() {
	var rtnResult = new Array();
	var fieldList = parent.FlowChartObject.FormFieldList;
	if (!fieldList) return rtnResult;
	// 转换成option支持的格式
	for (var i = 0, length = fieldList.length; i < length; i++) {
		// 不支持在机器人节点里面往明细表里面的字段填值 by zhugr 2017-09-01		
		if((fieldList[i].name && fieldList[i].name.indexOf(".") > 0) || (fieldList[i].controlType && fieldList[i].controlType == 'detailsTable')){
			continue;
		}
		rtnResult.push({value:fieldList[i].name, name:fieldList[i].label});
	}
	return rtnResult;
};

function getIndexFromFieldList(value) {
	var _value = value || '';
	if (_value == '') return null;
	var fieldList = parent.FlowChartObject.FormFieldList;
	if (!fieldList) return null;
	for (var i = 0, length = fieldList.length; i < length; i++) {
		if (fieldList[i].name == value) return i;
	}
	return null;
};

// paramObject格式为：{field:'', fieldName:'', idField:'', nameField:''}
function createRow(trElement, paramObject) {
	var _paramObject = paramObject || {field:'', fieldName:'', value:'', showValue:''}
	var tdElement, html;
	// 表单字段名
	tdElement = trElement.insertCell(-1);
	tdElement.setAttribute('align', 'center');
	tdElement.innerHTML = createSelectElementHTML(transFormFieldList(), _paramObject.field, _paramObject.fieldName);
	// 更新值
	tdElement = trElement.insertCell(-1);
	html = createInputElementHTML(_paramObject.idField, 'hidden');
	html += createInputElementHTML(_paramObject.nameField, 'readOnly');
	html += '<br>' + createHrefElementHTML(LangNodeObject['selectFormList'], 'openExpressionEditor(this);');
	tdElement.innerHTML = html;
	// 删除操作
	tdElement = trElement.insertCell(-1);
	tdElement.setAttribute('align', 'center');
	tdElement.innerHTML = createHrefElementHTML(LangObject.Operation['operationDelete'], 'deleteRow(this);');
};

function openExpressionEditor(owner) {
	var idField, nameField;
	var arrElement = getElementsByParent(owner.parentNode, "input");
	if (arrElement.length < 2) return;
	if (arrElement[0].style.display == 'none') {
		idField = arrElement[0];
		nameField = arrElement[1];
	} else {
		idField = arrElement[1];
		nameField = arrElement[0];
	}
	// 获取相应配置的数据类型
	var selectValue = getElementsByParent(owner.parentNode.parentNode.cells[0], "select")[0].value;
	var selectedIndex = getIndexFromFieldList(selectValue), fieldList = parent.FlowChartObject.FormFieldList;
	// 调用公式定义器
	window._FlowChartObject = parent.FlowChartObject;
	Formula_Dialog(
			idField,
			nameField,
			parent.FlowChartObject.FormFieldList,
			(selectedIndex == null) ? "Object" : fieldList[selectedIndex].type,
			null,
			"com.landray.kmss.sys.lbpm.engine.formula.LbpmFunction",
			parent.FlowChartObject.ModelName);
};

// 追加行
function appendRow(table, paramObject) {
	var _table = table || document.getElementById('main');
	createRow(_table.insertRow(_table.rows.length), paramObject);
};

// 删除行
function deleteRow(owner) {
	var findNode = owner;
	for (;findNode.tagName && findNode.tagName.toLowerCase() != 'tr'; findNode = findNode.parentNode) {}
	if (findNode && findNode.tagName) findNode.parentNode.removeChild(findNode);
};

// 输出参数
function OutputParamters(params) {
	var _params = params || null;
	if (_params == null) return;
	// 输出...
	var table = document.getElementById('main');
	for (var i = 0, length = _params.length; i < length; i++) {
		appendRow(table, _params[i]);
	}
};

function initDocument() {
	// 节点原配置的类型不是当前类型或没有获取到相关配置
	if (parent.NodeData.unid != parent.document.getElementById("type").value || !parent.NodeContent) {
		appendRow();
		return;
	}
	// 获得内容对象
	var json = eval('(' + parent.NodeContent + ')');
	// 输出参数
	OutputParamters(json.params);
};
</script>
<body onload="initDocument();">
<table id="main" width="100%" class="tb_normal">
	<tr align="center">
		<td width="20%"><script>writeMessage("robot_Others_FormFieldName");</script></td>
		<td><script>writeMessage("robot_Others_UpdateValue");</script></td>
		<td width="8%">
			<a href="JavaScript:appendRow();"><script>document.write(LangObject.Operation["operationAdd"]);</script></a>
		</td>
	</tr>
	<!-- <tr>
		<td width="20%"><script>writeMessage("robot_Description");</script></td>
		<td colspan="2"><script>writeMessage("robot_Others_UpdateField_Help");</script></td>
	</tr> -->
</table>
</body>
</html>