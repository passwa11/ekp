var listView = render.parent;
listView.storeTemp(data);
var lang = listView.getModelingLang();
var selected = listView.selectedRowsMap;
var columns = data.columns;
var drilling = listView.isDrilling();
{$
<div class="lui-listview-container">
	<div class="lui-listview-content">
		<table width="100%" class="lui-listview-table">
			<thead><tr>$}
			if(listView.config.multi === "true"){
				{$<th style="width:5px;">
					<input type="checkbox" name="List_Select_All" />
				</th>$}
			}
			{$<th style="width:40px;">{%lang['modelingAppCategory.fdOrder']%}</th>$}
				var detailData = [];
				var detailColumns = [];

				for(var i = 0;i < columns.length; i ++){
					var col = columns[i];
					if(col.hidden != 'true'){
						{$<th>{%col.title%}</th>$}
					}
					if(col.type === "detail" && col.name === data.detailField){
						detailColumns = col.columns;
						detailData = col.data;
					}
				}
				if(data.showDetail){
					for(var i = 0 ; i< detailColumns.length;i++){
						var col = detailColumns[i];
						if(col.hidden == 'false'){
							{$<th>{%col.title%}</th>$}
						}
					}
				}
				// 穿透
				if(drilling){
					{$<th style="width:40px;">{%lang['modeling.operate']%}</th>$}
				}
			{$</tr></thead>
			<tbody>$}
				var rowLength = 0;
				if(columns.length > 0 && columns[0].data && columns[0].data.length > 0){
					rowLength = columns[0].data.length;
				}
			if(data.showDetail && detailData.length > 0){
				var index = 0;
				for (var i = 0; i < rowLength; i ++) {
					for(var m=0;m < detailData.length;m++){
						var detail = detailData[m];
						if(detail.length > 0 && columns[0].data[i] === detail[0].mainModelId){
							for(var n=0;n< detail.length; n++){
								var dData = detail[n];
								{$<tr class="lui-listview-table-tr" data-rowindex={%index%} onclick="multiSelect('{%index%}')">$}
									if(listView.config.multi === "true"){
									console.log(dData["fdId"])
									{$<td>$}
										if(selected[dData["fdId"]]){
										{$ <input type="checkbox" checked name="List_Selected"  /> $}
										}else{
										{$ <input type="checkbox" name="List_Selected" /> $}
										}
										{$</td>$}
									}
									{$<td>{%++index%}</td>
									$}
									for (var j = 0; j < columns.length; j ++) {
										var col = columns[j];
										if(col.hidden != 'true'){
											if(col.data && col.data[i]){
												var colVal = col.data[i];
												// 地址本默认取名称显示
												if(col.type.indexOf("com.landray.kmss.sys.organization") >- 1 && typeof(colVal) === "object"){
													colVal = colVal.name;
												}else if(typeof(colVal) === "object" && colVal.hasOwnProperty("value")){
													// // 由于返回的类型没法区分是否是是枚举类型，只能通过值的类型来区分
													colVal = colVal.text;
												}else if(col.businessType === "relevance" && colVal && colVal.indexOf("[")>-1){
													//处理关联文档显示
													colVal = JSON.parse(colVal);
													if(colVal.length > 0){
														var relValue = "";
														for(var v= 0;v< colVal.length;v++){
															if(relValue && colVal[v].subject){
																relValue+=";" + colVal[v].subject;
															}else{
																relValue += colVal[v].subject;
															}
														}
														colVal = relValue;
													}else{
														colVal ="";
													}
												}
												if(colVal){
													colVal = colVal.replace(/</g,'&lt;').replace(/>/g,'&gt;');
													if(col.showThousand){
														colVal = colVal.replace(/(\d{1,3})(?=(\d{3})+(?:$|\.))/g,'$1,');
													}
												}
												{$<td>{%colVal%}</td>$}
											}else{
												{$<td>{%lang['modeling.no.data']%}</td>$}
											}
										}
									}
									for(var j = 0 ; j< detailColumns.length;j++){
										var col = detailColumns[j];
										if(col.hidden == 'false'){
											if(dData && dData[col.name]){
												var colVal = dData[col.name];
												// 地址本默认取名称显示
												if(col.type.indexOf("com.landray.kmss.sys.organization") >- 1 && typeof(colVal) === "object"){
												colVal = colVal.name;
												}else if(typeof(colVal) === "object" && colVal.hasOwnProperty("value")){
												// // 由于返回的类型没法区分是否是是枚举类型，只能通过值的类型来区分
												colVal = colVal.text;
												}else if(col.businessType === "relevance" && colVal && colVal.indexOf("[")>-1){
													//处理关联文档显示
													colVal = JSON.parse(colVal);
													if(colVal.length > 0){
														var relValue = "";
														for(var v= 0;v< colVal.length;v++){
															if(relValue && colVal[v].subject){
																relValue+=";" + colVal[v].subject;
															}else{
																relValue += colVal[v].subject;
															}
														}
														colVal = relValue;
													}else{
														colVal ="";
													}
												}
												if(colVal){
													colVal = colVal.replace(/</g,'&lt;').replace(/>/g,'&gt;');
													if(col.showThousand){
														colVal = colVal.replace(/(\d{1,3})(?=(\d{3})+(?:$|\.))/g,'$1,');
													}
												}
												{$<td>{%colVal%}</td>$}
											}else{
												{$<td>{%lang['modeling.no.data']%}</td>$}
											}
										}
									}
									if(drilling){
									{$<td><a href="javascript:void(0);" class="drilling-link">{%lang['modeling.jump']%}</a></td>$}
									}
									{$</tr>$}
							}
						}
					}
				}
			}else{
				for (var i = 0; i < rowLength; i ++) {
					{$<tr class="lui-listview-table-tr" data-rowindex={%i%} onclick="multiSelect('{%i%}')">$}
					if(listView.config.multi === "true"){
					console.log(columns[0].data[i])
					{$<td>$}
						if(selected[columns[0].data[i]]){
						{$ <input type="checkbox" checked name="List_Selected"  /> $}
						}else{
						{$ <input type="checkbox" name="List_Selected" /> $}
						}
						{$</td>$}
					}
					{$<td>{%i+1%}</td>
					$}
					for (var j = 0; j < columns.length; j ++) {
						var col = columns[j];
						if(col.hidden != 'true'){
							if(col.data && col.data[i]){
								var colVal = col.data[i];
								// 地址本默认取名称显示
								if(col.type.indexOf("com.landray.kmss.sys.organization") >- 1 && typeof(colVal) === "object"){
								colVal = colVal.name;
								}else if(typeof(colVal) === "object" && colVal.hasOwnProperty("value")){
								// // 由于返回的类型没法区分是否是是枚举类型，只能通过值的类型来区分
								colVal = colVal.text;
								}else if(col.businessType === "relevance" && colVal && colVal.indexOf("[")>-1){
									//处理关联文档显示
									colVal = JSON.parse(colVal);
									if(colVal.length > 0){
										var relValue = "";
										for(var v= 0;v< colVal.length;v++){
											if(relValue && colVal[v].subject){
												relValue+=";" + colVal[v].subject;
											}else{
												relValue += colVal[v].subject;
											}
										}
										colVal = relValue;
									}else{
										colVal ="";
									}
								}
								if(colVal){
									colVal = colVal.replace(/</g,'&lt;').replace(/>/g,'&gt;');
									if(col.showThousand){
										colVal = colVal.replace(/(\d{1,3})(?=(\d{3})+(?:$|\.))/g,'$1,');
									}
								}
								{$<td>{%colVal%}</td>$}
							}else{
							{$<td>{%lang['modeling.no.data']%}</td>$}
							}
						}
					}
					if(drilling){
					{$<td><a href="javascript:void(0);" class="drilling-link">{%lang['modeling.jump']%}</a></td>$}
					}
					{$</tr>$}
				}
			}
			{$</tbody>
		</table>
	</div>
	<div class="lui-listview-foot">
		<div class="lui-listview-foot-paging"></div>
	</div>
</div>

$}
