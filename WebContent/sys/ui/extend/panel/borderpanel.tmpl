var showTitle = layout.tabpanel.vars.showTitle;
		showTitle = (showTitle==null || showTitle=='true');
		var v_width = (layout.tabpanel.vars.width || "1").split(":");
		var i;
		for(i=0; i<v_width.length; i++){
		v_width[i] = parseInt(v_width[i]);
		if(isNaN(v_width[i])){
		v_width = [1];
		break;
		}
		}
		var width = [], size = 0, n = 0;
		for(i=0; i<layout.tabpanel.contents.length; i++){
		if(n == v_width.length)
		n = 0;
		width.push(v_width[n]);
		size += v_width[n];
		n++;
		}
		var _vars = layout.tabpanel.config.vars;
		var _customStyle = '';
		var _bgColor = '';
		var _bg = '';
		var _padding = '';
		var _borderRadius = '';
		var _top = 0;
		var _top_style = '';
		if(_vars){
		_customStyle = _vars.style || '';
		_bgColor = _vars.bgColor === '' ? '' : (_vars.bgColor!=null) ? 'background-color:'+_vars.bgColor+';': '';
		_bg = _vars.bg === '' ? '' : (_vars.bg!=null) ? 'background-image:url('+layout.env.fn.formatUrl(_vars.bg)+');': '';
		_padding = _vars.padding === '' ? '' : (_vars.padding!=null) ? 'padding:'+_vars.padding+';': '';
		_borderRadius = _vars.borderRadius == '' ? '' : _vars.borderRadius!=null ? 'border-radius:'+_vars.borderRadius+';': '';
		_top = _vars.top || 0;
		_top_style = _top != 0 ? 'position:relative;top:-'+_top+'px;margin-bottom:-'+_top+'px;': '';
		}
		if(_bgColor || _bg){
		{$
<style>
				#{%layout.tabpanel.cid%} .lui_tabpanel_border_content_l{
						background:transparent;
						}
</style>
		$}
		}
		if(_borderRadius){
		{$
<style>
				#{%layout.tabpanel.cid%} .tabPanel_frame{
						overflow:hidden;
						}
</style>
		$}
		}
		{$
<style>
		#{%layout.tabpanel.cid%} [data-lui-type='lui/panel!Content']{
				{%_padding%}
				}
</style>
<div style="{% _bgColor %} {% _bg %} {% _borderRadius %} {% _top_style %} {%_customStyle%}" class="lui_tabpanel_border_frame tabPanel_frame ">
<div class='lui_tabpanel_title'>
<span class='lui_tabpanel_title_icon'></span>
<span class='lui_tabpanel_title_main'></span>
<span class='lui_tabpanel_title_subtitle'></span>
</div>
<div class="lui_tabpanel_border_header_l">
<div class="lui_tabpanel_border_header_r">
<div class="lui_tabpanel_border_header_c">
</div>
</div>
</div>
<div class="lui_tabpanel_border_middle_l">
<div class="lui_tabpanel_border_middle_r">
<div class="lui_tabpanel_border_middle_c clearfloat">
		$}
		for(i=0; i<layout.tabpanel.contents.length; i++){
		{$
<div style="width:{% (Math.floor(1000/size*width[i])-1)/10.0 %}%; float:left;" onmouseover="this.className='lui_tabpanel_border_content_over';" onmouseout="this.className='';">
<div class="lui_tabpanel_border_space{% i==0?'_first':'' %}">
		$}
		if(showTitle){
		{$
<div class="lui_tabpanel_border_title_l">
<div class="lui_tabpanel_border_title_r">
<div class="lui_tabpanel_border_title_c">
		{% env.fn.formatText(layout.tabpanel.contents[i].title) %}
</div>
</div>
</div>
		$}
		}
		{$
<div class="lui_tabpanel_border_content_l">
<div class="lui_tabpanel_border_content_r">
<div class="lui_tabpanel_border_content_c" data-lui-mark="panel.content">
</div>
</div>
</div>
</div>
</div>
		$}
		}
		{$
</div>
</div>
</div>
<div class="lui_tabpanel_border_footer_l">
<div class="lui_tabpanel_border_footer_r">
<div class="lui_tabpanel_border_footer_c">
</div>
</div>
</div>
</div>
		$}
		function indexChanged(evt){
		evt.cancel = true;
		for(var i=0;i<layout.tabpanel.contents.length;i++){
		layout.tabpanel.contentsNode[i].show();
		layout.tabpanel.contents[i].load();
		}
		}
		layout.tabpanel.on("indexChanged", indexChanged);
		layout.tabpanel.onErase(function(){layout.tabpanel.off('indexChanged', indexChanged);});
