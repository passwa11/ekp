<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.example.org/design-config"
	xmlns:tns="http://www.example.org/design-config" elementFormDefault="qualified">


	<simpleType name="class">
		<annotation>
			<documentation>Java类</documentation>
		</annotation>
		<restriction base="string"></restriction>
	</simpleType>

	<attributeGroup name="modelForeignAttributesGroup">
		<attribute name="cascade">
			<annotation>
				<documentation>级联风格</documentation>
			</annotation>
			<simpleType>
				<restriction base="string">
					<enumeration value="all"></enumeration>
					<enumeration value="none"></enumeration>
					<enumeration value="save-update"></enumeration>
					<enumeration value="delete"></enumeration>
					<enumeration value="all-delete-orphan"></enumeration>
				</restriction>
			</simpleType>
		</attribute>
	</attributeGroup>

	<attributeGroup name="modelCommonAttributesGroup">
		<attribute name="name" type="string" use="required">
			<annotation>
				<documentation>属性名</documentation>
			</annotation>
		</attribute>
		<attribute name="messageKey" type="string" use="required">
			<annotation>
				<documentation>属性中文对应资源key，样例：sys-home:sysHomeMain.fdName
				</documentation>
			</annotation>
		</attribute>
		<attribute name="column" type="string" use="required">
			<annotation>
				<documentation>数据库字段名</documentation>
			</annotation>
		</attribute>
		<attribute name="notNull" type="boolean">
			<annotation>
				<documentation>是否不允许为空，默认为false（允许为空）</documentation>
			</annotation>
		</attribute>
		<attribute name="unique" type="boolean">
			<annotation>
				<documentation>是否唯一，默认为false</documentation>
			</annotation>
		</attribute>
		<attribute name="validate" type="boolean">
			<annotation>
				<documentation>是否需要校验，默认为false</documentation>
			</annotation>
		</attribute>
		<attribute name="canSearch" type="boolean">
			<annotation>
				<documentation>是否允许出现在搜索列表中，默认为false</documentation>
			</annotation>
		</attribute>
		<attribute name="canSubscribe" type="boolean">
			<annotation>
				<documentation>是否允许出现在订阅系统中，默认为false</documentation>
			</annotation>
		</attribute>
		<attribute name="canRelation" type="boolean">
			<annotation>
				<documentation>是否允许出现在关联系统中，默认为false</documentation>
			</annotation>
		</attribute>
		<attribute name="canDisplay" type="boolean">
			<annotation>
				<documentation>是否允许出现在界面中，默认为true</documentation>
			</annotation>
		</attribute>
		<attribute name="readOnly" type="boolean">
			<annotation>
				<documentation>是否只读，默认为false</documentation>
			</annotation>
		</attribute>
		<attribute name="dialogJS" type="string">
			<annotation>
				<documentation>若该项通过选择，则再此描述选择的js代码，采用!{mulSelect}替换是否多选，!{idField}替换存放ID的域，!{nameField}替换name存放的域，!{message(资源名)}替换资源的引用
				</documentation>
			</annotation>
		</attribute>
		<attribute name="langSupport" type="boolean">
			<annotation>
				<documentation>
					是否支持多语言
				</documentation>
			</annotation>
		</attribute>
	</attributeGroup>

	<element name="models">
		<annotation>
			<documentation>域模型列表</documentation>
		</annotation>
		<complexType>
			<sequence>
				<element name="model" maxOccurs="unbounded" minOccurs="1">
					<annotation>
						<documentation>域模型</documentation>
					</annotation>
					<complexType>
						<sequence maxOccurs="unbounded" minOccurs="0">
							<choice>
								<element name="idProperty">
									<annotation>
										<documentation>
											id属性
										</documentation>
									</annotation>
									<complexType>
										<sequence>
											<element name="generator" maxOccurs="1" minOccurs="1">
												<annotation>
													<documentation>
														id产生策略
													</documentation>
												</annotation>
												<complexType>
													<sequence>
														<element name="param" maxOccurs="unbounded"
															minOccurs="0">
															<annotation>
																<documentation>
																	id生成器参数
																</documentation>
															</annotation>
															<complexType>
																<attribute name="name" type="string" use="required">
																	<annotation>
																		<documentation>
																			参数名称
																		</documentation>
																	</annotation>
																</attribute>
																<attribute name="value" type="string" use="required">
																	<annotation>
																		<documentation>
																			参数值
																		</documentation>
																	</annotation>
																</attribute>
															</complexType>
														</element>
													</sequence>
													<attribute name="type" use="required">
														<annotation>
															<documentation>
																生成策略类型：native(自动生成)|assigned(程序指定)|foreign(引用外键)|hilo(hilo高低位算法)
															</documentation>
														</annotation>
														<simpleType>
															<restriction base="string">
																<enumeration value="native">
																</enumeration>
																<enumeration value="assigned">
																</enumeration>
																<enumeration value="foreign">
																</enumeration>
																<!-- 王晖 2007-09-27 加入hilo和sequence生成策略枚举 -->
																<enumeration value="hilo" />
																<enumeration value="sequence" />
															</restriction>
														</simpleType>
													</attribute>
												</complexType>
											</element>
										</sequence>

									</complexType>
								</element>
								<element name="simpleProperty">
									<annotation>
										<documentation>
											简单属性，如String、Integer等
										</documentation>
									</annotation>
									<complexType>
										<attributeGroup ref="tns:modelCommonAttributesGroup">
										</attributeGroup>
										<attribute name="type" use="required">
											<annotation>
												<documentation>
													类型
												</documentation>
											</annotation>
											<simpleType>
												<restriction base="string">
													<enumeration value="Boolean">
													</enumeration>
													<enumeration value="Integer">
													</enumeration>
													<enumeration value="Long">
													</enumeration>
													<enumeration value="Double">
													</enumeration>
													<enumeration value="String">
													</enumeration>
													<enumeration value="RTF">
													</enumeration>
													<enumeration value="Date">
													</enumeration>
													<enumeration value="Time">
													</enumeration>
													<enumeration value="DateTime">
													</enumeration>
													<enumeration value="Blob">
													</enumeration>
												</restriction>
											</simpleType>
										</attribute>
										<attribute name="length" type="int">
											<annotation>
												<documentation>
													长度，在类型为String的时候生效
												</documentation>
											</annotation>
										</attribute>
										<attribute name="enumType" type="string">
											<annotation>
												<documentation>
													若该属性为枚举类型，在此描述枚举的type
												</documentation>
											</annotation>
										</attribute>
										<attribute name="defaultValue" type="string">
											<annotation>
												<documentation>
													该属性的默认值
												</documentation>
											</annotation>
										</attribute>
									</complexType>
								</element>
								<element name="modelProperty">
									<annotation>
										<documentation>
											域模型对象链接属性，在Hibernate映射为一对一或多对一的关系
										</documentation>
									</annotation>
									<complexType>
										<attributeGroup ref="tns:modelCommonAttributesGroup">
										</attributeGroup>
										<attributeGroup ref="tns:modelForeignAttributesGroup">
										</attributeGroup>
										<attribute name="type" type="tns:class" use="required">
											<annotation>
												<documentation>
													类型
												</documentation>
											</annotation>
										</attribute>
										<attribute name="treeModel" type="boolean">
											<annotation>
												<documentation>
													是否是树结构的域模型，若为true，该属性必须包含hbmParent和fdHierarchyId属性，默认为false
												</documentation>
											</annotation>
										</attribute>
										<attribute name="constrained" type="boolean">
											<annotation>
												<documentation>
													约束，一对一的关系时使用，这个选项影响save()和delete()在级联执行时的先后顺序
												</documentation>
											</annotation>
										</attribute>
										<attribute name="where" type="string">
											<annotation>
												<documentation>
													查询该属性的附加where语句
												</documentation>
											</annotation>
										</attribute>
									</complexType>
								</element>
								<element name="listProperty">
									<annotation>
										<documentation>
											列表属性，在Hibernate映射为一对多或多对多的关系
										</documentation>
									</annotation>
									<complexType>
										<attributeGroup ref="tns:modelCommonAttributesGroup">
										</attributeGroup>
										<attributeGroup ref="tns:modelForeignAttributesGroup">
										</attributeGroup>
										<attribute name="type" type="tns:class">
											<annotation>
												<documentation>
													list里面元素的类型
												</documentation>
											</annotation>
										</attribute>
										<attribute name="table" type="string">
											<annotation>
												<documentation>
													一对多的关系可忽略该选项，多对多的关系时为中间表的名字
												</documentation>
											</annotation>
										</attribute>
										<attribute name="elementColumn" type="string">
											<annotation>
												<documentation>
													列表元素对应数据库列的ID字段
												</documentation>
											</annotation>
										</attribute>
										<attribute name="indexColumn" type="string">
											<annotation>
												<documentation>
													有序list的序号列
												</documentation>
											</annotation>
										</attribute>
										<attribute name="inverse" type="boolean">
											<annotation>
												<documentation>
													标记这个集合作为双向关联关系中的方向一端，默认为false
												</documentation>
											</annotation>
										</attribute>
										<attribute name="orderBy" type="string">
											<annotation>
												<documentation>
													若列表是有序的，在此指定序号列（同Hibernate参数）
												</documentation>
											</annotation>
										</attribute>
										<attribute name="where" type="string">
											<annotation>
												<documentation>
													查询该属性的附加where语句
												</documentation>
											</annotation>
										</attribute>
									</complexType>
								</element>
								<element name="complexProperty">
									<annotation>
										<documentation>
											复合属性，该属性一般不会记录在数据库中，或通过多层的关系取得
										</documentation>
									</annotation>
									<complexType>
										<attribute name="name" type="string" use="required">
											<annotation>
												<documentation>
													属性名
												</documentation>
											</annotation>
										</attribute>
										<attribute name="messageKey" type="string" use="required">
											<annotation>
												<documentation>
													属性中文对应资源key，样例：sys-home:sysHomeMain.fdStyle.fdName
												</documentation>
											</annotation>
										</attribute>
										<attribute name="type" type="string" use="required">
											<annotation>
												<documentation>
													类型
												</documentation>
											</annotation>
										</attribute>
										<attribute name="canSearch" type="boolean">
											<annotation>
												<documentation>
													是否允许出现在搜索列表中，默认为false
												</documentation>
											</annotation>
										</attribute>
										<attribute name="notNull" type="boolean">
											<annotation>
												<documentation>是否不允许为空，默认为false（允许为空）</documentation>
											</annotation>
										</attribute>
										<attribute name="canSubscribe" type="boolean">
											<annotation>
												<documentation>
													是否允许出现在订阅系统中，默认为false
												</documentation>
											</annotation>
										</attribute>
										<attribute name="canDisplay" type="boolean">
											<annotation>
												<documentation>
													是否允许出现在界面中，默认为true
												</documentation>
											</annotation>
										</attribute>
										<attribute name="dialogJS" type="string">
											<annotation>
												<documentation>
													若该项通过选择，则再此描述选择的js代码，采用!{mulSelect}替换是否多选，!{idField}替换存放ID的域，!{nameField}替换name存放的域，!{message(资源名)}替换资源的引用
												</documentation>
											</annotation>
										</attribute>
										<attribute name="treeModel" type="boolean">
											<annotation>
												<documentation>
													是否是树结构的域模型，若为true，该属性必须包含hbmParent和fdHierarchyId属性，默认为false
												</documentation>
											</annotation>
										</attribute>
										<attribute name="calculated" type="boolean">
											<annotation>
												<documentation>
													是否为计算项，计算项不允许搜索
												</documentation>
											</annotation>
										</attribute>
										<attribute name="enumType" type="string">
											<annotation>
												<documentation>
													若该属性为枚举类型，在此描述枚举的type
												</documentation>
											</annotation>
										</attribute>
									</complexType>
								</element>
								<element name="attachmentProperty">
									<complexType>
										<attribute name="name" type="string" use="required">
										</attribute>
										<attribute name="messageKey" type="string" use="required">
										</attribute>
										<attribute name="canDisplay" type="boolean">
										</attribute>
									</complexType>
								</element>
							</choice>

						</sequence>
						<attribute name="modelName" type="tns:class" use="required">
							<annotation>
								<documentation>域模型类名，样例：com.landray.kmss.example.flow.model.ExampleFlowMain
								</documentation>
							</annotation>
						</attribute>
						<attribute name="extendClass" type="tns:class">
							<annotation>
								<documentation>该域模型继承了哪个域模型，配置了继承的属性后，过滤器和搜索条件的配置会从父类的配置中继承，该属性一般配置在子类中，样例：com.landray.kmss.sys.doc.model.SysDocBaseInfo
								</documentation>
							</annotation>
						</attribute>
						<attribute name="messageKey" type="string" use="required">
							<annotation>
								<documentation>域模型的中文对应资源key，样例：sys-home:table.sysHomeMain
								</documentation>
							</annotation>
						</attribute>
						<attribute name="table" type="string">
							<annotation>
								<documentation>域模型对应的数据库表</documentation>
							</annotation>
						</attribute>
						<attribute name="url" type="string">
							<annotation>
								<documentation>打开该域模型的URL，可用${propertyName}的方式替换参数，样例：/example/flow/example_flow_main/ExampleFlowMain.do?method=view&amp;fdId=${fdId}
								</documentation>
							</annotation>
						</attribute>
						<attribute name="discriminatorProperty" type="string">
							<annotation>
								<documentation>在继承关系的域模型父类中使用，用于区分子类的属性名</documentation>
							</annotation>
						</attribute>
						<attribute name="discriminatorValue" type="string">
							<annotation>
								<documentation>在继承关系的域模型子类中使用，标识该子类的值</documentation>
							</annotation>
						</attribute>
						<attribute name="displayProperty" type="string">
							<annotation>
								<documentation>该域模型显示的属性，一般采用fdName</documentation>
							</annotation>
						</attribute>
						<attribute name="serviceBean" type="string">
						</attribute>
					</complexType>
				</element>
			</sequence>
		</complexType>
	</element>
</schema>