<?xml version="1.0" encoding="UTF-8"?>
<schema
	xmlns="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.example.org/design-config"
	xmlns:tns="http://www.example.org/design-config"
	elementFormDefault="qualified">
	<!-- =========================== 校验器设置 ===========================
		校验器表达式：校验器名(参数1=值1,参数2=值2,...)或true或false
		通用的参数可以在request中的validatorParameter中指定，在调用校验器的时候不需要重复指定
		运算符：|或运算；&与运算；[]调整运算优先级
		样例：[roleValidator(role=SYSROLE_ADMIN;SYSROLE_USER)|orgAdminValidator(role=ROLE_SYSORGELEMENT_ORGADMIN,orgid=fdParentId)]&fieldValueValidator(field=fdId,value=2)
		
		校验器通用参数名：
		recid=fdId（从Request中获取记录ID的参数名）
		model=com.landray.kmss.sys.organization.model.SysOrgDept（域模型）
		role=SYSROLE_ADMIN（角色别名）
		
		角色校验器：校验当前用户是否有拥有某个角色
		roleValidator(role)
		
		机构/部门管理员校验器：校验当前用户是否具有机构/部门管理员的角色，并且当前处理的组织架构对象是否在其所处的机构/部门下
		orgAdminValidator(role,orgid)/deptAdminValidator(role,orgid)
		说明：采用request.getParameter(orgid)的方式来获取到组织架构对象的id信息
		orgAdminValidator(role,recid,model,orgproperty)/deptAdminValidator(role,recid,model,orgproperty)
		说明：先从request.getParameter(recid)的方式获取业务域模型，然后在根据orgproperty取得组织架构对象信息
		orgAdminValidator(role,recid,model,orgidproperty)/deptAdminValidator(role,recid,model,orgidproperty)
		说明：先从request.getParameter(recid)的方式获取业务域模型，然后在根据orgidproperty取得组织架构对象的id信息
		
		状态值校验器：校验状态域是否与指定的值匹配
		fieldValueValidator(field,value/except)
		说明：采用request.getParameter(field)的方式来获取到状态值，再跟value/except进行校验，value/except可设置多种取值情况，用;进行分隔		
		fieldValueValidator(recid,model,fieldproperty,value/except)
		说明：采用request.getParameter(recid)的方式来获取业务域模型，然后根据fieldproperty获取到状态值，再跟value/except进行校验，value/except可设置多种取值情况，用;进行分隔
		value是确定值，except是排除值
		
		过滤器校验器：校验当前用户对某条记录是否有权限
		authFieldValidator(type,recid,model)
		说明：type参数指filter的type值
		
		访问本人信息校验器：校验当前用户是否正在访问属于其本人的信息
		hrOrgOwnerValidator(role,orgid)
		说明：采用request.getParameter(orgid)的方式来获取到组织架构对象的id信息
		hrOrgOwnerValidator(role,recid,model,orgproperty)
		说明：先从request.getParameter(recid)的方式获取业务域模型，然后再根据orgproperty取得组织架构对象信息
		hrOrgOwnerValidator(role,recid,model,orgidproperty)
		说明：先从request.getParameter(recid)的方式获取业务域模型，然后再根据orgidproperty取得组织架构对象的id信息
		
		分类权限校验器：
		authCategoryEditorValidator(cateid)/authCategoryReaderValidator(cateid)
		说明：采用request.getParameter(cateid)的方法获取到类别ID，然后校验当前用户对该分类是否具有维护/使用的权限，一般使用于模板
		authCategoryEditorValidator(templateid,templatemodel)/authCategoryReaderValidator(templateid,templatemodel)
		说明：采用request.getParameter(templateid)的方法获取到模板ID，然后校验当前用户对该模板是否具有维护/使用的权限，一般使用于文档
		authCategoryEditorValidator(recid,model,property)/authCategoryReaderValidator(recid,model,property)
		说明：采用request.getParameter(recid)的方法获取到文档ID，根据model获取到文档域模型，根据property获取到模板域模型，然后校验当前用户对该模板是否具有维护/使用的权限，一般使用于文档
		以上的调用都可以加入参数role,如果当前用户具有该角色,则不过滤分类权限
	-->

	<!-- =========================== 数据过滤器设置 ===========================
		过滤器表达式：过滤器名(参数1=值1,参数2=值2,...)
		跟校验器不一样，过滤器不可使用逻辑运算，多个过滤器之间是使用或运算
		
		角色过滤器：若当前用户拥有某个角色时，不进行数据过滤
		roleFilter(role)
		
		授权域过滤器：若当前用户在某记录给定的域中，则该记录不进行过滤
		authFieldFilter(field)
		说明：
		field：必选，记录的属性名，多值用;分隔
		
		根据不同的角色，设置不同的权限域过滤器：
		authFieldFilter(role_0,field_0,role_1,field_1,...,field)
		说明：
		若当前用户拥有role_n的角色时，选择field_n的参数
		若当前用户不拥有所有设置的角色，则选择field的参数
		参数含义同上
		
		过滤本机构/本部门/本人的数据
		authOrgFieldFilter(orgrole,deptrole,personrole,field)
		说明：
		当前用户拥有orgrole的角色时，能够查看他所在机构下所有field相关的信息
		当前用户拥有deptrole的角色时，能够查看他所在部门下所有field相关的信息
		当前用户拥有personrole的角色时，能够查看他自己的field相关信息
		当前用户不拥有上述角色时，他所有记录都看不见
		
		状态域过滤器：当某记录给定域的值等于某个指定值时，该记录不进行过滤
		flagFieldFilter(field,value)
		说明：field为记录的属性名，多值用;分隔，value中若要指定字符串，请以''引起来，如：value='1'
	-->

	<element
		name="configs">
		<complexType>
			<sequence>
				<element
					name="module"
					maxOccurs="unbounded"
					minOccurs="0">
					<annotation>
						<documentation>模块配置</documentation>
					</annotation>
					<complexType>
						<sequence>
							<element
								name="roles"
								type="string"								
								maxOccurs="1"
								minOccurs="0">
								<annotation>
									<documentation>
										普通角色权限列表，用“;”分开多个角色权限
									</documentation>
								</annotation>
							</element>
						    <element
								name="areaRoles"
								type="string"
								maxOccurs="1"
								minOccurs="0">
								<annotation>
									<documentation>
										分级角色权限列表，用“;”分开多个角色权限
									</documentation>
								</annotation>
							</element>
							<element
                                name="roleType"
                                maxOccurs="1"
                                minOccurs="0">
                                <annotation>
                                    <documentation>
                                                                        三员管理体系下对权限的分类
                                    </documentation>
                                </annotation>
                                <complexType>
                                    <sequence>
                                        <element
                                            name="sysadmin"
                                            maxOccurs="1"
                                            minOccurs="0">
                                            <annotation>
                                                <documentation>
                                                                                             属于系统管理员的权限，用“;”分开多个角色权限
                                                </documentation>
                                            </annotation>
                                        </element>
                                        <element
                                            name="security"
                                            maxOccurs="1"
                                            minOccurs="0">
                                            <annotation>
                                                <documentation>
                                                                                             属于安全管理员的权限，用“;”分开多个角色权限
                                                </documentation>
                                            </annotation>
                                        </element>
                                        <element
                                            name="auditor"
                                            maxOccurs="1"
                                            minOccurs="0">
                                            <annotation>
                                                <documentation>
                                                                                             属于安全审计员的权限，用“;”分开多个角色权限
                                                </documentation>
                                            </annotation>
                                        </element>
                                        <element
                                            name="useless"
                                            maxOccurs="1"
                                            minOccurs="0">
                                            <annotation>
                                                <documentation>
                                                                                             无效权限，即不可用于权限分配的权限，一般用来屏蔽某些功能，用“;”分开多个角色权限
                                                </documentation>
                                            </annotation>
                                        </element>
                                    </sequence>
                                </complexType>
                            </element>						
							<element
								name="request"
								maxOccurs="unbounded"
								minOccurs="0">
								<annotation>
									<documentation>
										请求的权限设置
									</documentation>
								</annotation>
								<complexType>
									<sequence>
										<element
											name="query"
											maxOccurs="unbounded"
											minOccurs="0">
											<annotation>
												<documentation>
													请求参数对应的权限声明
												</documentation>
											</annotation>
											<complexType>
												<attribute
													name="queryString"
													type="string">
													<annotation>
														<documentation>
															请求参数，用&amp;分隔多个参数，|分隔参数的所有可能值，参数顺序无所谓，可用*表示该参数必须出现，但不限定值，样例：method=add|save|saveadd
														</documentation>
													</annotation>
												</attribute>
												<attribute
													name="validator"
													type="string"
													use="required">
												</attribute>
												<attribute
													name="position">
													<annotation>
														<documentation>
															获取请求参数的优先级别，top为最高优先级，样例：default
														</documentation>
													</annotation>
													<simpleType>
														<restriction
															base="string">
															<enumeration
																value="default">
															</enumeration>
															<enumeration
																value="top">
															</enumeration>
															<enumeration
																value="bottom">
															</enumeration>
														</restriction>
													</simpleType>
												</attribute>
											</complexType>
										</element>
									</sequence>
									<attribute
										name="path"
										type="string"
										use="required">
										<annotation>
											<documentation>
												请求路径，样例：example_flow_main/exampleFlowMain*
											</documentation>
										</annotation>
									</attribute>
									<attribute
										name="validatorParameter"
										type="string">
										<annotation>
											<documentation>
												该请求下通用的校验器参数，样例：model=com.landray.kmss.example.flow.model.ExampleFlowMain,recid=fdId
											</documentation>
										</annotation>
									</attribute>
									<attribute
										name="defaultValidator"
										type="string">
										<annotation>
											<documentation>
												默认校验器，见校验器的说明注释
											</documentation>
										</annotation>
									</attribute>
								</complexType>
							</element>
							<element
								name="filters"
								maxOccurs="unbounded"
								minOccurs="0">
								<annotation>
									<documentation>过滤器列表</documentation>
								</annotation>
								<complexType>
									<sequence>
										<element
											name="filter"
											maxOccurs="unbounded"
											minOccurs="1">
											<annotation>
												<documentation>
													过滤器
												</documentation>
											</annotation>
											<complexType>
												<attribute
													name="type"
													type="string"
													use="required">
													<annotation>
														<documentation>
															过滤器类型，可取值为：SYS_READER|SYS_EDITOR|[自定义类型]
														</documentation>
													</annotation>
												</attribute>
												<attribute
													name="expression"
													type="string"
													use="required">
													<annotation>
														<documentation>
															数据过滤器定义，见过滤器的说明注释
														</documentation>
													</annotation>
												</attribute>
											</complexType>
										</element>
									</sequence>
									<attribute
										name="modelName"
										type="tns:class"
										use="required">
									</attribute>
								</complexType>
							</element>
						</sequence>
						<attribute
							name="urlPrefix"
							type="string"
							use="required">
							<annotation>
								<documentation>
									URL路径的前缀，样例：/example/flow/
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="messageKey"
							type="string">
							<annotation>
								<documentation>
									模块名称的KEY值，样例：example-flow:exampleFlow.moduleName
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="defaultValidator"
							type="string">
							<annotation>
								<documentation>
									默认校验器，见校验器的说明注释
								</documentation>
							</annotation>
						</attribute>
					</complexType>
				</element>
				<element
					name="portlet"
					maxOccurs="unbounded"
					minOccurs="0">
					<annotation>
						<documentation>主页窗口</documentation>
					</annotation>
					<complexType>
						<attribute
							name="moduleKey"
							type="string"
							use="required">
							<annotation>
								<documentation>
									窗口标题的模块Key
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="messageKey"
							type="string"
							use="required">
							<annotation>
								<documentation>窗口标题的Key</documentation>
							</annotation>
						</attribute>
						<attribute
							name="moreURL"
							type="string">
							<annotation>
								<documentation>更多链接</documentation>
							</annotation>
						</attribute>
						<attribute
							name="contentURL"
							type="string">
							<annotation>
								<documentation>内容URL</documentation>
							</annotation>
						</attribute>
						<attribute
							name="docLink"
							type="string">
							<annotation>
								<documentation>
									文档链接，若contentBean中提供了链接，则以contentBean提供的为准
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="headBean"
							type="string">
							<annotation>
								<documentation>
									获取标题信息的spring中bean名称
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="contentBean"
							type="string">
							<annotation>
								<documentation>
									获取内容信息的spring中bean名称
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="cateBean"
							type="string">
							<annotation>
								<documentation>
									获取分类信息的spring中bean名称
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="templateClass"
							type="tns:class">
						</attribute>
						<attribute
							name="createURL"
							type="string">
							<annotation>
								<documentation>新建URL</documentation>
							</annotation>
						</attribute>
						<attribute
							name="moduleNode"
							type="string">
							<annotation>
								<documentation>是否是模块节点，默认为空即不是，如果是设为true
								</documentation>
							</annotation>
						</attribute>
					</complexType>
				</element>
				<element
					name="quartz"
					maxOccurs="unbounded"
					minOccurs="0">
					<annotation>
						<documentation>定时任务</documentation>
					</annotation>
					<complexType>
						<attribute
							name="messageKey"
							type="string"
							use="required">
							<annotation>
								<documentation>任务名称</documentation>
							</annotation>
						</attribute>
						<attribute
							name="jobService"
							type="string"
							use="required">
							<annotation>
								<documentation>
									任务的Service（spring的bean名称）
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="jobMethod"
							type="string"
							use="required">
							<annotation>
								<documentation>
									任务的Service里面执行的方法名，该方法的参数必须是SysQuartzJobContext
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="cronExpression"
							type="string"
							use="required">
							<annotation>
								<documentation>任务时间描述</documentation>
							</annotation>
						</attribute>
						<attribute
							name="enable"
							type="boolean">
							<annotation>
								<documentation>默认是否启用</documentation>
							</annotation>
						</attribute>
						<attribute
							name="runType">
							<annotation>
								<documentation>
									是否允许在多服务器上运行
								</documentation>
							</annotation>
							<simpleType>
								<restriction
									base="string">

									<enumeration
										value="SINGLENODE"></enumeration>
								</restriction>
							</simpleType>
						</attribute>
						<attribute
							name="description"
							type="string">
							<annotation>
								<documentation>详细描述</documentation>
							</annotation>
						</attribute>
					</complexType>
				</element>
				<element
					name="search"
					maxOccurs="unbounded"
					minOccurs="0">
					<annotation>
						<documentation>搜索设置</documentation>
					</annotation>
					<complexType>
						<attribute
							name="messageKey"
							type="string"
							use="required">
							<annotation>
								<documentation>
									资源文件的key值，搜索条件输入界面中的标题文字，样例：km-doc:kmDoc.search.title
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="conditionUrl"
							type="string">
							<annotation>
								<documentation>
									自定义搜索条件的子JSP路径，用于添加机制内无法实现的查询条件，样例：/km/doc/km_doc_main/kmDocMain_customSearch.jsp
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="resultUrl"
							type="string">
							<annotation>
								<documentation>
									搜索使用的URL，样例：/km/doc/km_doc_main/kmDocMain.do?method=search
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="modelName"
							type="tns:class"
							use="required">
							<annotation>
								<documentation>对应的域模型</documentation>
							</annotation>
						</attribute>
						<attribute
							name="whereBlock"
							type="string">
						</attribute>
						<attribute
							name="resultProperties"
							type="string">
							<annotation>
								<documentation>
									普通搜索机制的搜索结果显示属性名称串，多个属性用半角分号“;”隔开。
									示例：fdName;fdOrder;fdCreator
									注意：如果配置了resultUrl属性，则此属性将被忽略！
								</documentation>
							</annotation>
						</attribute>
					</complexType>
				</element>

				<element
					name="ftSearch"
					maxOccurs="unbounded"
					minOccurs="0">
					<annotation>
						<documentation>全文检索设置</documentation>
					</annotation>
					<complexType>
						<sequence>
							<element
								name="luceneField"
								maxOccurs="unbounded"
								minOccurs="0">
								<annotation>
									<documentation>
										检索属性定义
									</documentation>
								</annotation>
								<complexType>
									<attribute
										name="name"
										type="string"
										use="required">
										<annotation>
											<documentation>
												检索名
											</documentation>
										</annotation>
									</attribute>
									<attribute
										name="property"
										type="string"
										use="required">
										<annotation>
											<documentation>
												域模型属性
											</documentation>
										</annotation>
									</attribute>
									<attribute
										name="type"
										type="string"
										use="required">
										<annotation>
											<documentation>
												检索方式
											</documentation>
										</annotation>
									</attribute>
									<attribute
										name="property-value-getter"
										type="string">
										<annotation>
											<documentation>
												属性获取实现类，实现IFulTextPropertyGetter接口
											</documentation>
										</annotation>
									</attribute>
									<attribute
										name="role"
										type="string">
										<annotation>
											<documentation>
												角色
											</documentation>
										</annotation>
									</attribute>
									<attribute
										name="boost"
										type="string">
										<annotation>
											<documentation>
												相关性
											</documentation>
										</annotation>
									</attribute>
								</complexType>
							</element>
							<element name="attachment" maxOccurs="unbounded" minOccurs="0">
							<annotation>
								<documentation>
									附件特殊定义
								</documentation>
							</annotation>
							<complexType>
								<attribute name="key" type="string" use="required">
									<annotation>
										<documentation>
											附件key值
										</documentation>
									</annotation>
								</attribute>
								<attribute name="field" type="string" use="required">
									<annotation>
										<documentation>
											对应的lucene字段名
										</documentation>
									</annotation>
								</attribute>
								<attribute name="fileNameField" type="string" use="required">
									<annotation>
										<documentation>
											对应的文件名字段
										</documentation>
									</annotation>
								</attribute>
							</complexType>
						</element>
						
						</sequence>
						<attribute
							name="timeField"
							type="string"
							use="required">
							<annotation>
								<documentation>
									比较时间属性名，样例：docAlterTime
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="boost"
							type="string">
							<annotation>
								<documentation>
									相关性，样例：2.0
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="hsql"
							type="string">
							<annotation>
								<documentation>自定义HSQL语句</documentation>
							</annotation>
						</attribute>
						<attribute
							name="modelName"
							type="tns:class">
						</attribute>
					</complexType>
				</element>

				<element
					name="subscribe"
					maxOccurs="unbounded"
					minOccurs="0">
					<annotation>
						<documentation>订阅设置</documentation>
					</annotation>
					<complexType>
						<attribute
							name="messageKey"
							type="string"
							use="required">
							<annotation>
								<documentation>
									资源key值，标识该订阅的内容，样例：km-doc:kmDoc.moduleName
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="timeField"
							type="string"
							use="required">
							<annotation>
								<documentation>
									主域模型中时间字段属性名，用于过滤一定时间内的订阅内容，样例：docPublicTime
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="whereBlock"
							type="string">
							<annotation>
								<documentation>
									过滤订阅内容一些其它HSQL条件语句，样例：kmDocKnowledge.docStatus='30'
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="replaceKey"
							type="string">
							<annotation>
								<documentation>
									发送邮件时候使用的替换文本，样例：km-doc:kmDoc.docCreator;km-doc:kmDoc.docSubject
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="modelName"
							type="tns:class">
						</attribute>
					</complexType>
				</element>
                <element
                        name="bookmark"
                        maxOccurs="unbounded"
                        minOccurs="0">
                    <annotation>
                        <documentation>收藏设置</documentation>
                    </annotation>
                    <complexType>
                        <attribute
                                name="messageKey"
                                type="string"
                                use="required">
                            <annotation>
                                <documentation>
                                    资源key值，标识该收藏的内容，样例：km-doc:kmDoc.moduleName
                                </documentation>
                            </annotation>
                        </attribute>
                        <attribute
                                name="timeField"
                                type="string"
                                use="required">
                            <annotation>
                                <documentation>
                                    主域模型中时间字段属性名，用于过滤一定时间内的订阅内容，样例：docPublicTime
                                </documentation>
                            </annotation>
                        </attribute>
                        <attribute
                                name="whereBlock"
                                type="string">
                            <annotation>
                                <documentation>
                                    过滤订阅内容一些其它HSQL条件语句，样例：kmDocKnowledge.docStatus='30'
                                </documentation>
                            </annotation>
                        </attribute>
                        <attribute
                                name="modelName"
                                type="tns:class">
                        </attribute>
                    </complexType>
                </element>
				<element
					name="relation"
					maxOccurs="unbounded"
					minOccurs="0">
					<annotation>
						<documentation>关联设置</documentation>
					</annotation>
					<complexType>
						<attribute
							name="messageKey"
							type="string"
							use="required">
							<annotation>
								<documentation>
									资源key值，标识该关联的内容，样例：km-doc:kmDoc.moduleName
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="modelName"
							type="tns:class">
						</attribute>
						<attribute
							name="whereBlock"
							type="string">
							<annotation>
								<documentation>
									关联内容一些其它HSQL条件语句，样例：kmDocKnowledge.docStatus='30'
								</documentation>
							</annotation>
						</attribute>
					</complexType>
				</element>
				<element
					name="treeNodes"
					maxOccurs="unbounded"
					minOccurs="0">
					<annotation>
						<documentation>树节点设置</documentation>
					</annotation>
					<complexType>
						<sequence>
							<element
								minOccurs="1"
								maxOccurs="unbounded"
								name="treeNode"
								type="tns:treeNodeComplexType">
							</element>
						</sequence>
						<attribute
							name="type"
							use="required">
							<simpleType>
								<restriction
									base="string">
									<enumeration
										value="draft"></enumeration>
									<enumeration
										value="myjob"></enumeration>
									<enumeration
										value="config"></enumeration>
									<enumeration
										value="mysetting"></enumeration>
									<enumeration
										value="sysconfig"></enumeration>	
									<enumeration
										value="kms"></enumeration>
									<enumeration
										value="knowledge"></enumeration>
								</restriction>
							</simpleType>
						</attribute>
					</complexType>
				</element>
				<element
					name="homePage"
					maxOccurs="unbounded"
					minOccurs="0">
					<annotation>
						<documentation>模块主页设置</documentation>
					</annotation>
					<complexType>
						<attribute
							name="messageKey"
							type="string"
							use="required">
						</attribute>
						<attribute
							name="urlPrefix"
							type="string"
							use="required">
						</attribute>
						<attribute
							name="url"
							type="string">
						</attribute>
						<attribute
							name="config"
							type="string">
						</attribute>
						<attribute name="type">
							<simpleType>
								<restriction base="string">
									<enumeration value="app"></enumeration>
									<enumeration value="global"></enumeration>
									<enumeration value="sys"></enumeration>
								</restriction>
							</simpleType>
						</attribute>
					</complexType>
				</element>
				<element
					name="categoryMng"
					minOccurs="0"
					maxOccurs="unbounded">
					<annotation>
						<documentation>统一分类管理配置</documentation>
					</annotation>
					<complexType>
						<attribute
							name="messageKey"
							type="string"
							use="required">
							<annotation>
								<documentation>
									资源key值，标识该分类设置显示的内容，样例：km-doc:kmDoc.categoryMngName
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="modelName"
							type="tns:class">
							<annotation>
								<documentation>
									分类设置对应的域模型
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="serviceName"
							type="string"
							use="required">
						</attribute>
						<attribute
							name="adminRoleName"
							type="string">
							<annotation>
								<documentation>
									模块内部的全局分类维护者角色，样例：ROLE_MEETING_CATEGORY_MAINTAINER
								</documentation>
							</annotation>
						</attribute>
					</complexType>
				</element>
				<element
					name="flowDef"
					minOccurs="0"
					maxOccurs="unbounded">
					<annotation>
						<documentation>流程定义设置</documentation>
					</annotation>
					<complexType>
						<sequence>
							<element
								name="variant"
								type="tns:flowVariantType"
								minOccurs="0"
								maxOccurs="unbounded">
							</element>
						</sequence>
						<attribute
							name="messageKey"
							type="string">
							<annotation>
								<documentation>
									资源key值，标识该流程设置显示的内容，样例：km-doc:kmDoc.mainFlow，当一个域模型需要配置两个流程的时候，该值必填
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="modelName"
							type="string"
							use="required">
							<annotation>
								<documentation>
									绑定流程定义的域模型类名
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="key"
							type="string"
							use="required">
							<annotation>
								<documentation>
									绑定流程定义的key值
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="type"
							type="string">
							<annotation>
								<documentation>
									工作流类型，如oa类型、hr类型的流程，该值必填
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="templatePropertyName"
							type="string">
							<annotation>
								<documentation>
									文档中的模板属性名，如fdTemplate，该值必填
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="createDocTemplateIdName"
							type="string">
							<annotation>
								<documentation>
									模板中用于创建主文档的模板ID名，如fdTemplateId
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="moduleMessageKey"
							type="string">
							<annotation>
								<documentation>
									资源key值，模块名，样例：km-doc:kmDoc.moduleName
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="templateModelName"
							type="string">
							<annotation>
								<documentation>
									文档中的模板域模型名，如，该值必填com.landray.kmss.km.review.model.KmReviewTemplate.
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="show"
							type="boolean">
							<annotation>
								<documentation>
									是否显示，可以根据该值来过滤一些模块，比如模块树可以不展示某些模块。该值非必填，默认值为true，可以设置为false
								</documentation>
							</annotation>
						</attribute>
					</complexType>
				</element>
				<element
					name="profileConfig"
					maxOccurs="unbounded"
					minOccurs="0">
					<annotation>
						<documentation>后台配置中心</documentation>
					</annotation>
					<complexType>
						<!-- 用户类型（普通用户（业务模块管理员）:1, 系统管理员:2, 安全保密管理员:4, 安全审计管理员:8） -->
						<attribute
							name="userType"
							type="string">
						</attribute>
						<!-- 仅允许三员管理员访问 -->
						<attribute
							name="onlyTripartite"
							type="boolean">
						</attribute>
						<attribute
							name="key"
							type="string">
						</attribute>
						<attribute
							name="messageKey"
							type="string"
							use="required">
						</attribute>
						<attribute
							name="url"
							type="string"
							use="required">
						</attribute>
						<attribute
							name="target"
							type="string">
						</attribute>
						<attribute
							name="order"
							type="integer">
						</attribute>
						<attribute
							name="icon"
							type="string">
						</attribute>
						<attribute
							name="description"
							type="string">
						</attribute>
						<attribute
							name="subType"
							type="string">
						</attribute>
						<attribute name="type">
							<annotation>
								<documentation>
									这里指8个中心的类型：org, portal, lbpm, mobile, integrate, maintenance, notify, app，其它的类型由业务决定。
								</documentation>
							</annotation>
						</attribute>
						<attribute
							name="urlPrefix"
							type="string">
						</attribute>
					</complexType>
				</element>
			</sequence>
		</complexType>
	</element>

	<simpleType
		name="class">
		<restriction
			base="string"></restriction>
	</simpleType>



	<complexType
		name="treeNodeComplexType">
		<sequence>
			<element
				name="treeNode"
				type="tns:treeNodeComplexType"
				maxOccurs="unbounded"
				minOccurs="0">
			</element>
		</sequence>
		<attribute
			name="messageKey"
			type="string"
			use="required">
		</attribute>
		<attribute
			name="url"
			type="string">
		</attribute>
		<attribute
			name="target"
			type="string">
		</attribute>
		<attribute
			name="authUrl"
			type="string">
		</attribute>
	</complexType>



	<complexType
		name="flowVariantType">
		<attribute
			name="name"
			type="string"
			use="required">
		</attribute>
		<attribute
			name="key"
			type="string"
			use="required">
		</attribute>
		<attribute
				name="depend"
				type="string"
				use="optional">
			<annotation>
				<documentation>
					系统模块定义，多个模块以"|"分割比如sys/app|sys/person，默认是或的关系。
				</documentation>
			</annotation>
		</attribute>
		<attribute
				name="validator"
				type="string"
				use="optional">
			<annotation>
				<documentation>
					系统校验器，自定义需实现接口com.landray.kmss.sys.config.design.ISysFlowDefVariantValidator，再将其放入spring.xml中，实现方法中传入的参数分别为variant的name和depend属性值。
				</documentation>
			</annotation>
		</attribute>
	</complexType>
</schema>